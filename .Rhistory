url <- "https://www.ngdc.noaa.gov/nndc/struts/results?type_0=Exact&query_0=$ID&t=101650&s=13&d=189&dfn=signif.txt"
read.delim(url, header = T, sep = "\t")
NOAA_df <- read.delim(url, header = T, sep = "\t")
head(NOAA_df)
summary(NOAA_df)
summary(NOAA_df$YEAR)
table(NOAA_df$YEAR)
dataParam <- NOAA_df
dataParam$DATE <- paste(dataParam$YEAR,
dataParam$MONTH,
dataParam$DAY,
sep = "/")
dataParam$DATE <- as.Date(x = dataParam$DATE, "%Y/%m/%d")
View(dataParam)
dataParam$DATE <- paste(dataParam$DAY,
dataParam$MONTH,
dataParam$YEAR,
sep = "/")
dataParam$DATE <- as.Date(x = dataParam$DATE, "%d/%m/%Y")
dataParam$DATE <- paste(dataParam$DAY,
dataParam$MONTH,
dataParam$YEAR,
sep = "/")
dataParam$DATE <- as.Date(x = dataParam$DATE, "%d/%m/%Y")
class(dataParam$DATE)
dataParam$LATITUDE <- as.numeric(dataParam$LATITUDE)
dataParam$LONGITUDE <- as.numeric(dataParam$LONGITUDE)
dataParam$LOCATION_NAME
gsub(pattern = "\:*", replacement = "", dataParam$LOCATION_NAME)
gsub(pattern = ":*", replacement = "", dataParam$LOCATION_NAME)
gsub(pattern = "\\:*", replacement = "", dataParam$LOCATION_NAME)
dataParam$LOCATION_NAME_clean <- gsub("(.*):.*", "\\1", dataParam$LOCATION_NAME)
dataParam$LOCATION_NAME_clean
dataParam$LOCATION_NAME_clean <- paste(gsub("(.*):.*", "\\1", dataParam$LOCATION_NAME), ":")
dataParam$LOCATION_NAME_clean
dataParam$LOCATION_NAME
dataParam$LOCATION_NAME_clean
dataParam$LOCATION_NAME_clean <- paste0(gsub("(.*):.*", "\\1", dataParam$LOCATION_NAME), ":")
dataParam$LOCATION_NAME_clean
library(capstoneJH)
library(capstoneJH)
devtools::use_testthat()
filename <- system.file("extdata/NOAA_df.csv", package = "capstoneJH")
data <- readr::read_delim(filename, delim = "\t")
filename
filename <- system.file("extdata/NOAA_df.csv", package = "capstoneJH")
filename
filename
data <- readr::read_delim(filename, delim = "\t")
system.file("extdata/NOAA_df.csv", package = "capstoneJH")
data <- readr::read_delim("extdata/NOAA_df.csv", delim = "\t")
data <- readr::read_delim("extdata/NOAA_df.csv", delim = "\t")
data
test_that("eq_clean_data returns data frame", {
expect_is(eq_clean_data(data), "data.frame")
})
library(capstoneJH)
library(capstoneJH)
library(capstoneJH)
devtools::build_vignettes()
devtools::use_vignette()
devtools::build_vignettes()
devtools::use_readme_md()
devtools::build_vignettes("README.md")
devtools::use_vignettes("README.md")
devtools::use_vignette("README.md")
library(capstoneJH)
library(dplyr)
library(ggplot2)
library(readr)
library(capstoneJH)
data %>% eq_clean_data() %>%
filter(COUNTRY %in% c("GREECE", "ITALY"), YEAR > 2000) %>%
ggplot(aes(x = DATE,
y = COUNTRY,
color = as.numeric(TOTAL_DEATHS),
size = as.numeric(EQ_PRIMARY)
)) +
geom_timeline() +
geom_timeline_label(aes(label = LOCATION_NAME), n_max = 5) +
theme_timeline() +
labs(size = "Richter scale value", color = "# deaths")
devtools::use_travis()
library(capstoneJH)
